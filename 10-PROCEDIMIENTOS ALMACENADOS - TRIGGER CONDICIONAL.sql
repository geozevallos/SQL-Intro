## PROCEDIMINETOS ALMACENADOR

#CREANDO PROCEDIMIENTOS SIN PARAMETROS
CREATE PROCEDURE practicandobd.MUESTRA_CLIENTES()
SELECT * FROM practicandobd.clientes
WHERE POBLACIÓN = 'MADRID';

##LLAMANDO AL PROCEDIMIENTO ALMACENADO
CALL `practicandobd`.`MUESTRA_CLIENTES`();


##CREANDO CON PARAMETROS
CREATE PROCEDURE practicandobd.ACTUALIZA_PRODUCTOS(
N_PRECIO INT, CODIGO VARCHAR(4))
UPDATE practicandobd.productos
SET PRECIO = N_PRECIO
WHERE CODARTICULO = CODIGO;

# LLAMANDO AL PROCEIMIENTO
CALL `practicandobd`.ACTUALIZA_PRODUCTOS(23,'AR01');

### OTRO PROCEDIMIENT
# EL DELIMITER ES EL DELIMITADOR DE BLOQUE, PUEDE SER // ó $$
# EL ÚLTMIO DELIMITER ES PARA DECIR Q EL DELIMITADOR ES ;
DELIMITER //
CREATE PROCEDURE `practicandobd`.CALCULA_EDAD(ANIO_NAC INT)
BEGIN 
	DECLARE ANIO INT DEFAULT 2021;
    DECLARE EDAD INT;
    SET EDAD = ANIO - ANIO_NAC;
    
    SELECT EDAD;
    
END//

DELIMITER ;


CALL `practicandobd`.CALCULA_EDAD(1992)




## TRIGGER PARA VALORACION

DELIMITER $$
CREATE TRIGGER `practicandobd`.REVISA_PRECIO_BU 
BEFORE UPDATE ON `practicandobd`.productos
FOR EACH ROW
BEGIN
IF(NEW.precio <0) THEN
	SET NEW.precio = 0;
ELSEIF(NEW.precio > 1000) THEN
	SET NEW.precio = 1000;
END IF;
END $$
DELIMITER ;

UPDATE `practicandobd`.productos
SET precio = 23
WHERE CODARTICULO = 'AR01'



## MODIFICANDO
DELIMITER $$
CREATE TRIGGER `practicandobd`.REVISA_PRECIO_BU 
BEFORE UPDATE ON `practicandobd`.productos
FOR EACH ROW
BEGIN
IF(NEW.precio <0) THEN
	SET NEW.precio = OLD.precio;
ELSEIF(NEW.precio > 1000) THEN
	SET NEW.precio = OLD.precio;
END IF;
END $$
DELIMITER ;
